baseDir: examples/magento-iac/
cfg:
  templatesDir: /Users/gajdaw/pgttc/giac/src/../templates/
  nunjucks:
    autoescape: false
    tags:
      variableStart: <<<
      variableEnd: '>>>'
      blockStart: <%
      blockEnd: '%>'
    dev: false
    throwOnUndefined: false
    trimBlocks: false
    lstripBlocks: false
  filenameConvertions:
    gitignore: .gitignore
    dockerignore: .dockerignore
    gitkeep: .gitkeep
iterations:
  - __VPC_NAME__: dev
    __ENV_NAME__: dev1
files:
  - src: files/auth/Makefile
    dest: auth/Makefile
  - src: files/helm/deploy.sh
    dest: helm/__VPC_NAME__/__ENV_NAME__/deploy.sh
  - src: files/helm/values.yaml
    dest: helm/__VPC_NAME__/__ENV_NAME__/values.yaml
  - src: files/README.md
    dest: README.md
  - src: files/giac-doc.md
    dest: giac-doc.md
  - src: terragrunt/terragrunt.hcl
    dest: terragrunt/terragrunt.hcl
  - src: files/gitignore
    dest: gitignore
  - src: files/docker/dockerfiles/magento/magento.Dockerfile
    dest: docker/build/app.Dockerfile
  - src: files/docker/test/docker-compose.yml
    dest: docker/test/docker-compose.yml
  - src: files/docker/build/gitignore
    dest: docker/build/gitignore
  - src: files/docker/build/dockerignore
    dest: docker/build/dockerignore
  - src: files/docker/test/env
    dest: docker/test/.env
  - src: files/docker/build/Makefile-no-src
    dest: docker/build/Makefile
dirs:
  - src: ansible
    dest: ansible
  - src: tests
    dest: tests
  - src: vpn
    dest: vpn
  - src: helm-charts/helm-chart-basic
    dest: helm-chart
  - src: terragrunt/vpc
    dest: terragrunt/vpc
  - src: terragrunt/gke
    dest: terragrunt/gke
  - src: terragrunt/sql
    dest: terragrunt/sql
  - src: terragrunt/gsa
    dest: terragrunt/gsa
params:
  name: magento
  description: Magento
  version: v1.0.0
  provider:
    gcp:
      project_id: gcp_project_id
      envs:
        - dev/dev1
      vpc:
        boilerplate: >-
          git::ssh://git@github.com/PragmaticGuideToTheCloud/gcp-cloud-boilerplate.git//terraform/vpc
      gke:
        boilerplate: >-
          git::ssh://git@github.com/PragmaticGuideToTheCloud/gcp-cloud-boilerplate.git//terraform/gke-public-plane
      gsa:
        boilerplate: >-
          git::ssh://git@github.com/PragmaticGuideToTheCloud/gcp-cloud-boilerplate.git//terraform/gsa
      autoZone: false
  services:
    app:
      url: /
      readinessEnabled: true
      readinessPath: /login
      readinessPort: 8080
      targetPort: 8080
      dockerComposePorts:
        - '80:8080'
        - '443:8443'
      dockerComposeDependsOn:
        - mariadb
        - elasticsearch
      environment:
        MAGENTO_HOST: localhost
        MAGENTO_DATABASE_HOST: mariadb
        MAGENTO_DATABASE_NAME: bitnami_magento
        MAGENTO_DATABASE_USER: bn_magento
        MAGENTO_DATABASE_PASSWORD: magentoOOO
        ELASTICSEARCH_HOST: elasticsearch
        ELASTICSEARCH_PORT_NUMBER: 9200
    mariadb:
      image: 'docker.io/bitnami/mariadb:10.3'
      environment:
        MARIADB_USER: bn_magento
        MARIADB_PASSWORD: magentoOOO
        MARIADB_DATABASE: bitnami_magento
        MARIADB_ROOT_PASSWORD: zaq12wsx
    elasticsearch:
      image: 'docker.io/bitnami/elasticsearch:6'
  terraform:
    - vpc
    - gke
    - sql
    - gsa
  db:
    database_version: MYSQL_5_7
    database_host: database
    database_name: bitnami_magento
    database_user: bn_magento
    database_password: zaq12wsx
  container_registry: eu.gcr.io
  ansibleBoilerplateUrl: 'git@github.com:PragmaticGuideToTheCloud/gcp-cloud-boilerplate.git'
  containers:
    - name: app
  dockerServices:
    - name: mariadb
      image: 'docker.io/bitnami/mariadb:10.3'
      url: ''
      excludeFromHelm: true
      type: NodePort
      environment:
        MARIADB_USER: bn_magento
        MARIADB_PASSWORD: magentoOOO
        MARIADB_DATABASE: bitnami_magento
        MARIADB_ROOT_PASSWORD: zaq12wsx
      dockerComposeServiceName: mariadb
    - name: elasticsearch
      image: 'docker.io/bitnami/elasticsearch:6'
      url: ''
      excludeFromHelm: true
      type: NodePort
      dockerComposeServiceName: elasticsearch
    - name: app
      nodePort: 32767
      url: /
      type: NodePort
      readinessEnabled: true
      readinessPath: /login
      readinessPort: 8080
      targetPort: 8080
      dockerComposePorts:
        - '80:8080'
        - '443:8443'
      dockerComposeDependsOn:
        - mariadb
        - elasticsearch
      environment:
        MAGENTO_HOST: localhost
        MAGENTO_DATABASE_HOST: mariadb
        MAGENTO_DATABASE_NAME: bitnami_magento
        MAGENTO_DATABASE_USER: bn_magento
        MAGENTO_DATABASE_PASSWORD: magentoOOO
        ELASTICSEARCH_HOST: elasticsearch
        ELASTICSEARCH_PORT_NUMBER: 9200
      dockerComposeServiceName: app
  helmServices:
    - name: app
      nodePort: 32767
      url: /
      type: NodePort
      readinessEnabled: true
      readinessPath: /login
      readinessPort: 8080
      targetPort: 8080
      dockerComposePorts:
        - '80:8080'
        - '443:8443'
      dockerComposeDependsOn:
        - mariadb
        - elasticsearch
      environment:
        MAGENTO_HOST: localhost
        MAGENTO_DATABASE_HOST: mariadb
        MAGENTO_DATABASE_NAME: bitnami_magento
        MAGENTO_DATABASE_USER: bn_magento
        MAGENTO_DATABASE_PASSWORD: magentoOOO
        ELASTICSEARCH_HOST: elasticsearch
        ELASTICSEARCH_PORT_NUMBER: 9200
      dockerComposeServiceName: app
