baseDir: examples/testlink-iac/
cfg:
  templatesDir: /Users/gajdaw/pgttc/giac/src/../templates/
  nunjucks:
    autoescape: false
    tags:
      variableStart: <<<
      variableEnd: '>>>'
      blockStart: <%
      blockEnd: '%>'
    dev: false
    throwOnUndefined: false
    trimBlocks: false
    lstripBlocks: false
  filenameConvertions:
    gitignore: .gitignore
    dockerignore: .dockerignore
    gitkeep: .gitkeep
iterations:
  - __VPC_NAME__: dev
    __ENV_NAME__: dev1
files:
  - src: files/auth/Makefile
    dest: auth/Makefile
  - src: files/helm/deploy.sh
    dest: helm/__VPC_NAME__/__ENV_NAME__/deploy.sh
  - src: files/helm/values.yaml
    dest: helm/__VPC_NAME__/__ENV_NAME__/values.yaml
  - src: files/README.md
    dest: README.md
  - src: files/giac-doc.md
    dest: giac-doc.md
  - src: terraform/terragrunt.hcl
    dest: terraform/terragrunt.hcl
  - src: files/gitignore
    dest: gitignore
  - src: files/docker/dockerfiles/testlink/testlink.Dockerfile
    dest: docker/build/app.Dockerfile
  - src: files/docker/test/docker-compose.yml
    dest: docker/test/docker-compose.yml
  - src: files/docker/build/gitignore
    dest: docker/build/gitignore
  - src: files/docker/build/dockerignore
    dest: docker/build/dockerignore
  - src: files/docker/test/env
    dest: docker/test/.env
  - src: files/docker/build/Makefile-no-src
    dest: docker/build/Makefile
dirs:
  - src: ansible
    dest: ansible
  - src: tests
    dest: tests
  - src: vpn
    dest: vpn
  - src: helm-charts/helm-chart-basic
    dest: helm-chart
  - src: terraform/vpc
    dest: terraform/vpc
  - src: terraform/gke
    dest: terraform/gke
  - src: terraform/sql
    dest: terraform/sql
  - src: terraform/gsa
    dest: terraform/gsa
params:
  name: testlink
  description: Testlink
  version: v1.0.0
  provider:
    gcp:
      project_id: gcp_project_id
      envs:
        - dev/dev1
      vpc:
        boilerplate: >-
          git::ssh://git@github.com/PragmaticGuideToTheCloud/gcp-cloud-boilerplate.git//terraform/vpc
      gke:
        boilerplate: >-
          git::ssh://git@github.com/PragmaticGuideToTheCloud/gcp-cloud-boilerplate.git//terraform/gke-public-plane
      gsa:
        boilerplate: >-
          git::ssh://git@github.com/PragmaticGuideToTheCloud/gcp-cloud-boilerplate.git//terraform/gsa
      autoZone: false
  services:
    app:
      url: /
      readinessEnabled: true
      readinessPath: /login.php
      readinessPort: 8080
      targetPort: 8080
      dockerComposePorts:
        - '80:8080'
      dockerComposeDependsOn:
        - database
      environment:
        MYSQL_CLIENT_FLAVOR: mysql
        TESTLINK_DATABASE_HOST: database
        TESTLINK_DATABASE_PORT: 3306
        TESTLINK_DATABASE_NAME: testlink
        TESTLINK_DATABASE_USER: testlink
        TESTLINK_DATABASE_PASSWORD: testlink
    database:
      image: 'mysql:5.7'
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
        MYSQL_DATABASE: testlink
        MYSQL_USER: testlink
        MYSQL_PASSWORD: testlink
  terraform:
    - vpc
    - gke
    - sql
    - gsa
  db:
    database_version: MYSQL_5_7
    database_host: database
    database_name: testlink
    database_user: testlink
    database_password: testlink
  container_registry: eu.gcr.io
  ansibleBoilerplateUrl: 'git@github.com:PragmaticGuideToTheCloud/gcp-cloud-boilerplate.git'
  containers:
    - name: app
  dockerServices:
    - name: database
      image: 'mysql:5.7'
      url: ''
      excludeFromHelm: true
      type: NodePort
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
        MYSQL_DATABASE: testlink
        MYSQL_USER: testlink
        MYSQL_PASSWORD: testlink
      dockerComposeServiceName: database
    - name: app
      nodePort: 32767
      url: /
      type: NodePort
      readinessEnabled: true
      readinessPath: /login.php
      readinessPort: 8080
      targetPort: 8080
      dockerComposePorts:
        - '80:8080'
      dockerComposeDependsOn:
        - database
      environment:
        MYSQL_CLIENT_FLAVOR: mysql
        TESTLINK_DATABASE_HOST: database
        TESTLINK_DATABASE_PORT: 3306
        TESTLINK_DATABASE_NAME: testlink
        TESTLINK_DATABASE_USER: testlink
        TESTLINK_DATABASE_PASSWORD: testlink
      dockerComposeServiceName: app
  helmServices:
    - name: app
      nodePort: 32767
      url: /
      type: NodePort
      readinessEnabled: true
      readinessPath: /login.php
      readinessPort: 8080
      targetPort: 8080
      dockerComposePorts:
        - '80:8080'
      dockerComposeDependsOn:
        - database
      environment:
        MYSQL_CLIENT_FLAVOR: mysql
        TESTLINK_DATABASE_HOST: database
        TESTLINK_DATABASE_PORT: 3306
        TESTLINK_DATABASE_NAME: testlink
        TESTLINK_DATABASE_USER: testlink
        TESTLINK_DATABASE_PASSWORD: testlink
      dockerComposeServiceName: app
